//import term
import regex

const source_code =

'#include "stdio.h"
#include "stdlib.h"

// Hello!

+

int main(int argc, char **argv) {
  printf("%d\n", foo(atoi(argv[1])));
  return 0;
}'


fn main(){
	open_paren := regex.regex_opt(r'^\($')?


}

fn main(){
    txt := source_code
    query := r"/^([-<>~!%^&*\/+=?|.,:;]|->|<<|>>|\*\*|\|\||&&|--|\+\+|[-+*|&%\/=]=)$/"

    mut re := regex.regex_opt(query) or { panic(err) }
    //println(re.get_code())   // uncomment to see the print of the regex execution code
    start, end := re.match_string(txt)
    if start >= 0 {
        println("Match ($start, $end) => [${txt[start..end]}]")
    } else {
        println("No Match")
    }

    /* for name in re.group_map.keys() {
        println("group:'$name' \t=> [${re.get_group_by_name(txt, name)}] \
        bounds: ${re.get_group_bounds_by_name(name)}")
    } */
}